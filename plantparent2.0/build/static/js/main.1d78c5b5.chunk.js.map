{"version":3,"sources":["components/Plants.js","PlantMain.js","serviceWorker.js","components/Menu.js","components/Counter.js","components/TextInput.js","components/Home.js","components/AnotherCounter.js","components/BaseLayout.js","components/AboutUs.js","components/NewUser.js","store/actions/actionTypes.js","components/PlantDetails.js","components/RegistrationForm/Register.js","components/LoginForm/Login.js","components/MyGreenhouse.js","components/UserInput.js","store/reducer.js","index.js"],"names":["Plants","props","plantItems","listOfPlants","map","plant","key","VegetableId","Card","style","width","Img","variant","src","ThumbnailImage","Body","Title","Name","Text","Description","ListGroup","className","ListGroupItem","Light","Watering","Season","to","Breadcrumb","Item","active","CardDeck","connect","state","plants","dispatch","onPlantsFetched","data","type","payload","useEffect","fetch","then","response","json","Boolean","window","location","hostname","match","Menu","Navbar","bg","expand","Brand","href","height","alt","Toggle","aria-controls","Collapse","id","Nav","Link","Counter","Component","AnotherCounter","BaseLayout","this","children","AboutUs","size","onUsernameAdded","newUsername","name","zipcode","useState","addUsername","setAddUsername","placeholder","onChange","e","target","value","onClick","singlePlant","setSinglePlant","vegId","params","vegetableId","find","veg","console","log","SeedDepth","GerminationSoilTemp","DaysToGermination","SowIndoors","SowOutdoors","PhRange","GrowingSoilTemp","SpacingBeds","GoodCompanions","BadCompanions","SowingDescription","GrowingDescription","HarvestDescription","DaysToHarvestSeeds","DaysToHarvestSeedlings","withRouter","email","password","confirmPassword","successMessage","setState","handleChange","prevState","redirectToHome","history","push","htmlFor","aria-describedby","preventDefault","length","axios","post","API_BASE_URL","code","catch","error","sendDetailsToServer","display","role","updateTitle","showError","MyGreenhouse","UserInput","initialState","reducer","action","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","component","PlantMain","path","exact","PlantDetails","Register","Login","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.1d78c5b5.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport Breadcrumb from \"react-bootstrap/Breadcrumb\";\nimport Card from \"react-bootstrap/Card\";\nimport CardDeck from \"react-bootstrap/CardDeck\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport ListGroupItem from \"react-bootstrap/ListGroupItem\";\nimport { NavLink } from 'react-router-dom'\n\nfunction Plants(props) {\n\n\n    let plantItems = props.listOfPlants.map((plant) => {\n      return (\n        <div key={plant.VegetableId}>\n          <Card style={{ width: \"18rem\" }}>\n            <Card.Img variant=\"top\" src={plant.ThumbnailImage} />\n            <Card.Body>\n              <Card.Title>{plant.Name}</Card.Title>\n              <Card.Text>{plant.Description}</Card.Text>\n            </Card.Body>\n            <ListGroup className=\"list-group-flush\">\n              <ListGroupItem>Light: {plant.Light}</ListGroupItem>\n              <ListGroupItem>Water: {plant.Watering}</ListGroupItem>\n              <ListGroupItem>Season: {plant.Season}</ListGroupItem>\n            </ListGroup>\n            <Card.Body>\n              <NavLink to={\"/plantdetails/\" + plant.VegetableId}>See Details</NavLink>\n            </Card.Body>\n          </Card>\n\n          <br />\n        </div>\n      );\n\n    });\n    return (\n      <div>\n        <Breadcrumb>\n          <Breadcrumb.Item active>Explore Plants</Breadcrumb.Item>\n          \n        </Breadcrumb>\n        {/* <h1> Explore Plants </h1> */}\n        <CardDeck>{plantItems}</CardDeck>\n      </div>\n    );\n}\n\n\n\nexport default Plants\n\n// <img src={plant.ThumbnailImage} alt=\"vegetable\" />\n//           <h2>{plant.Name}</h2>\n//           <p>{plant.Description}</p>\n//           <ul>\n//             <li>Light: {plant.Light}</li>\n//             <li>Water: {plant.Watering}</li>\n//             <li>Season: {plant.Season}</li>\n//           </ul>\n","import React, { useEffect } from \"react\";\nimport \"./App.css\";\n// import Menu from \"./components/Menu\";\n// import Post from \"./components/Post\";\n// import Counter from \"./components/Counter\";\nimport Plants from \"./components/Plants\";\n// import TextInput from \"./components/TextInput\";\n// import Home from \"./components/Home\";\nimport { connect } from 'react-redux'\n\n\nfunction PlantMain(props) {\n\n\n  useEffect(() => {\n\n    fetch( \"https://cors-anywhere.herokuapp.com/\" +\n    \"http://highoncoding.com/vegetable/getcatalog\")\n    .then(response => response.json())\n    .then(data => {\n      props.onPlantsFetched(data)\n    })\n\n   \n  }, []);\n  \n    return (\n      <div>\n       <Plants listOfPlants = {props.plants} />\n      </div>\n    );\n\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    plants: state.plants\n}\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onPlantsFetched: (data) => dispatch({type: 'PLANTS_FETCHED', payload: data})\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlantMain);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\n\nfunction Menu() {\n    return (\n      <div>\n        <Navbar bg=\"light\" expand=\"lg\">\n          <Navbar.Brand href=\"/\">\n            <img\n              src=\"/logonavbar.png\"\n              width=\"150\"\n              height=\"40\"\n              className=\"d-inline-block align-top\"\n              alt=\"React Bootstrap logo\"\n            />\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Nav.Link href=\"/mygreenhouse\">My Greenhouse</Nav.Link>\n              <Nav.Link href=\"/plantmain\">Explore Plants</Nav.Link>\n              <Nav.Link href=\"/aboutus\">About Us</Nav.Link>\n            </Nav>\n            \n            <Nav className=\"ml-auto\">\n            <Nav.Link href=\"/register\">Register</Nav.Link>\n              <Nav.Link href=\"/login\">Login</Nav.Link>\n            </Nav>\n            \n          </Navbar.Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n\n\nexport default Menu;\n\n{\n  /* <ul>\n          <li>\n            <NavLink to=\"/\">Home</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/plantmain\">Explore Plants</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/addplant\">Add Plant</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/plantdetails/:VegetableCode\">Plant Details</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/contact\">Contact Us</NavLink>\n          </li>\n        </ul> */\n}\n\n//dropdown element\n{/* <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n                <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.2\">\n                  Another action\n                </NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.3\">\n                  Something\n                </NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item href=\"#action/3.4\">\n                  Separated link\n                </NavDropdown.Item>\n              </NavDropdown> */}\n\n//search bar element\n{/* <Form inline>\n              <FormControl\n                type=\"text\"\n                placeholder=\"Search\"\n                className=\"mr-sm-2\"\n              />\n              <Button variant=\"outline-success\">Search</Button>\n            </Form> */}","import React, { useState, useEffect } from \"react\";\n\nfunction Counter(props) {\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    props.onIncrement(count);\n  }, [count]);\n\n  const handleIncrement = () => {\n    setCount(count + 1);\n  };\n\n  return (\n    <div>\n      <b>---------Counter Component---------------</b>\n      <h1>{count}</h1>\n      <button onClick={handleIncrement}>Increment [Counter]</button>\n    </div>\n  );\n}\n\nexport default Counter;\n\n// import React, { useState } from \"react\";\n// import Menu from \"../components/Menu\";\n// import Counter from \"../components/Counter\";\n// import Plants from \"../components/Plants\";\n// import TextInput from \"../components/TextInput\";\n// import PlantMain from \"../PlantMain\";\n// import Home from \"../components/Home\";\n// import AnotherCounter from \"./AnotherCounter\";\n\n// function BaseLayout(props) {\n//   const [count, setCount] = useState(0);\n\n//   const handleIncrementCallback = (ctr) => {\n//     setCount(ctr);\n//     console.log(\"handleIncrementCallback in Baselayout.js\", ctr);\n//   };\n\n//   return (\n//     <div>\n//       <h2>App Component Counter {count}</h2>\n//       <Counter onIncrement={handleIncrementCallback} />\n//       <AnotherCounter ctr={count} />\n//       <a href=\"http://www.amycodes.me\">Amycodes.me 2020</a>\n//     </div>\n//   );\n// }\n\n// export default BaseLayout;\n\n//allows child to update parent using a callback function, baselayout.js is parent and counter.js is child\n\n//child cannot directly talk to siblings, which are other child components. But the child can talk to the parent, and the parent can talk to the sibling child.\n\n//AnotherCounter.js is the sibling of counter.js. Pass the properties from the parent to the additional child.\n\n//to reduce chaining, you can set a Global State. This allows any children to access the properties without having to back out through multiple parents.\n","import React, { Component } from \"react\";\n\nclass TextInput extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      name: \"\",\n      age: \"\",\n    };\n  }\n\n  handleTextboxChange = (e) => {\n    console.log(e.target.name);\n\n    this.setState(\n      {\n        [e.target.name]: e.target.value,\n      },\n      () => {\n        console.log(this.state.name);\n      }\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        <input\n          name=\"name\"\n          type=\"text\"\n          placeholder=\"Name\"\n          onChange={this.handleTextboxChange}\n        />\n        <input\n          name=\"age\"\n          type=\"text\"\n          placeholder=\"Age\"\n          onChange={this.handleTextboxChange}\n        />\n\n        <h1>{this.state.name}</h1>\n      </div>\n    );\n  }\n}\n\nexport default TextInput;\n","import React, { Component } from \"react\";\n\nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <h1>We're working on Plant Parent for you.</h1>\n        <h3>Come back on July 23, 2020 to see our launch!</h3>\n        <br />\n        <h4>\n          Check out our page <i>Explore Plants</i> in the meantime for a\n          preview.\n        </h4>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\n\nfunction AnotherCounter(props) {\n  return (\n    <div>\n      <h1>Another Counter</h1>\n      <h3>{props.ctr}</h3>\n    </div>\n  );\n}\n\nexport default AnotherCounter;\n","import React, { Component } from \"react\";\nimport Menu from \"../components/Menu\";\nimport '../App.css'\n\nimport Counter from \"../components/Counter\";\n// import Plants from \"../components/Plants\";\nimport TextInput from \"../components/TextInput\";\n// import PlantMain from \"../PlantMain\";\nimport Home from \"../components/Home\";\nimport AnotherCounter from \"./AnotherCounter\";\n\nclass BaseLayout extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <Menu />\n\n        {this.props.children}\n        <a href=\"http://www.amycodes.me\">Amycodes.me 2020</a>\n      </div>\n    );\n  }\n}\n\nexport default BaseLayout;\n\n//allows child to update parent using a callback function, baselayout.js is parent and counter.js is child\n\n//child cannot directly talk to siblings, which are other child components. But the child can talk to the parent, and the parent can talk to the sibling child.\n\n//AnotherCounter.js is the sibling of counter.js. Pass the properties from the parent to the additional child.\n\n//to reduce chaining, you can set a Global State/Redux. This allows any children to access the properties without having to back out through multiple parents.\n","import React, { Component } from \"react\";\nimport {\n  IoLogoTwitter,\n  IoLogoGithub,\n  IoIosDocument,\n  IoLogoLinkedin,\n} from \"react-icons/io\";\n\nclass AboutUs extends Component {\n  render() {\n    return (\n      <div>\n        <h1>About Plant Parent</h1>\n      <h3>Plant Parent was designed by Amy Roy as the capstone project for the DigitalCrafts March 2020 cohort.</h3>\n    <a href=\"https://github.com/MeerKatnip\">\n    <IoLogoGithub size=\"25%\"/></a>\n    <a href=\"https://www.linkedin.com/in/royamy/\">\n    <IoLogoLinkedin size=\"25%\"/></a>\n    <a href=\"https://twitter.com/AmyCodesMe\">\n    <IoLogoTwitter size=\"25%\" /></a>\n      </div>\n\n      \n    )\n  }\n}\n\nexport default AboutUs;\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actionTypes from \"../store/actions/actionTypes\";\n\nfunction NewUser(props) {\n  const [addUsername, setAddUsername] = useState(\"\");\n\n  const handleTextBoxChange = (e) => {\n    setAddUsername(e.target.value);\n  };\n\n  const handleAddUsername = () => {\n    props.onUsernameAdded(addUsername);\n  };\n\n  return (\n    <div>\n      <input\n        type=\"email\"\n        placeholder=\"Enter Email Address\"\n        name=\"username\"\n        onChange={handleTextBoxChange}\n      />\n      <button onClick={handleAddUsername}>Create Account</button>\n    </div>\n  );\n}\n\n// const mapStateToProps = (state) => {\n//     return {\n//         ctr: state.counter\n//     }\n// }\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onUsernameAdded: (newUsername) =>\n      dispatch({\n        type: actionTypes.USER_ADDED,\n        payload: { name: newUsername, zipcode: 77777 },\n      }),\n  };\n};\n\nexport default connect(mapDispatchToProps)(NewUser);\n","export const INC = \"INC\";\nexport const USER_ADDED = \"USER_ADDED\";\n","import React, { useState, useEffect } from \"react\";\n// import Plants from \"./Plants\";\nimport Breadcrumb from \"react-bootstrap/Breadcrumb\";\nimport { connect } from 'react-redux'\n\n\n\nfunction PlantDetails(props) {\n     const [singlePlant, setSinglePlant] = useState({})\n\n  useEffect(() => {\n\n    let vegId = props.match.params.vegetableId \n    let plant = props.plants.find(veg => {\n      return veg.VegetableId == vegId\n    })\n\n\n    setSinglePlant(plant)\n    console.log(vegId)\n  },[]) \n\n    return (\n      <span>\n        <Breadcrumb>\n          <Breadcrumb.Item href=\"/plantmain\">Explore Plants</Breadcrumb.Item>\n          <Breadcrumb.Item active>{singlePlant.Name}</Breadcrumb.Item>\n        </Breadcrumb>\n        {/* <h1>Plant Details</h1> */}\n        <h2>{singlePlant.Name}</h2>\n        <img src={singlePlant.ThumbnailImage} />\n        <p>{singlePlant.Description}</p>\n        Light: {singlePlant.Light} <br/>\n        Water: {singlePlant.Watering} <br/>\n        Season: {singlePlant.Season} <br/>\n        Seed Depth: {singlePlant.SeedDepth} <br/>\n        Germination Soil Temp: {singlePlant.GerminationSoilTemp}<br/>\n        Days to Germination: {singlePlant.DaysToGermination}<br/>\n        Sow Indoors: {singlePlant.SowIndoors}<br/>\n        Sow Outdoors: {singlePlant.SowOutdoors}<br/>\n        Soil PH Range: {singlePlant.PhRange}<br/>\n        Growing Soil Temp: {singlePlant.GrowingSoilTemp}<br/>\n        Spacing between Beds: {singlePlant.SpacingBeds}<br/>\n        Good Companions: {singlePlant.GoodCompanions}<br/>\n        Bad Companions: {singlePlant.BadCompanions}<br/>\n        <p>Sowing Description: {singlePlant.SowingDescription}</p>\n        <p>Growing Description: {singlePlant.GrowingDescription}</p>\n        <p>Harvest Description: {singlePlant.HarvestDescription}</p>\n        Days to Harvest Seeds: {singlePlant.DaysToHarvestSeeds}<br/>\n        Days to Harvest Seedlings: {singlePlant.DaysToHarvestSeedlings}<br/>\n    \n      </span>\n    )\n      \n  }\n\n  const mapStateToProps = (state) => {\n    \n    return {\n      plants: state.plants\n  }\n  }\n\n\nexport default connect(mapStateToProps)(PlantDetails);\n\n\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport './Register.css'\nimport { API_BASE_URL } from '../../constants/apiConstants';\nimport { withRouter } from 'react-router-dom'\n\n\n\nfunction Register(props) {\n\n    const [state, setState] = useState({\n        email : \"\",\n        password : \"\",\n        confirmPassword: \"\",\n        successMessage: null\n    })\n\n    const handleChange = (e) => {\n        const {id, value} = e.target\n        setState(prevState => ({\n            ...prevState,\n            [id] : value,\n        }))\n    }\n\n\n    const sendDetailsToServer = () => {\n        if(state.email.length && state.password.length) {\n            // props.showError(null);\n            const payload={\n                \"email\": state.email,\n                \"password\": state.password,\n            }\n        axios.post(API_BASE_URL + 'register', payload)\n        .then(function (response) {\n            console.log(response)\n            if(response.data.code === 200){\n                setState(prevState => ({\n                    ...prevState,\n                    'successMessage' : 'Registration successful! Redirecting to home page ...'\n                }))\n                redirectToHome();\n                // props.showError(null)\n            } else {\n                // props.showError(\"Some error occured\");\n            }\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n        } else {\n            // props.showError(\"Please enter valid username and password\")\n        }\n    }\n\n    const redirectToHome = () => {\n        // props.updateTitle('Home')\n        props.history.push('/home');\n    }\n\n    const redirectToLogin = () => {\n        // props.updateTitle('Login')\n        props.history.push('/login');\n    }\n\n    const handleSubmitClick = (e) => {\n        e.preventDefault();\n        if(state.password === state.confirmPassword) {\n            sendDetailsToServer()\n        } else {\n            // props.showError('Password does not match')\n        }\n    }\n\n    return(\n        <div className=\"card col-12 col-lg-4 login-card mt-2 hv-center\">\n            <form>\n                <div className=\"form-group text-left\">\n                    <label htmlFor=\"exampleInputEmail1\">Email address</label>\n                    <input type=\"email\"\n                    className=\"form-control\"\n                    id=\"email\"\n                    aria-describedby=\"emailHelp\"\n                    placeholder=\"Enter email\"\n                    value={state.email}\n                    onChange={handleChange}\n                    />\n\n                <small id=\"emailHelp\" className=\"form-text text-muted\">We won't share your email with anyone.</small>\n                </div>\n                <div className=\"form-group text-left\">\n                    <label htmlFor=\"exampleInputPassword1\">Password</label>\n                    <input type=\"password\"\n                    className=\"form-control\"\n                    id=\"password\"\n                    placeholder=\"Password\"\n                    value={state.password}\n                    onChange={handleChange}\n                    />\n                </div>\n                <div className=\"form-group text-left\">\n                    <label htmlFor=\"exampleInputPassword1\">Confirm Password</label>\n                    <input type=\"password\" \n                        className=\"form-control\" \n                        id=\"confirmPassword\" \n                        placeholder=\"Confirm Password\"\n                        value={state.confirmPassword}\n                        onChange={handleChange}\n                    />\n                </div>\n                <button \n                    type=\"submit\" \n                    className=\"btn btn-primary\"\n                    onClick={handleSubmitClick}\n                >\n                    Register\n                </button>\n            </form>\n            <div className=\"alert alert-success mt-2\" style={{display: state.successMessage ? 'block' : 'none' }} role=\"alert\">\n                {state.successMessage}\n            </div>\n            <div className=\"mt-2\">\n                <span>Already have an account? </span>\n                <span className=\"loginText\" onClick={() => redirectToLogin()}>Login here</span>\n\n            </div>\n        </div>\n    )\n}\n\nexport default withRouter(Register)","import React, { useState } from 'react'\nimport axios from 'axios'\nimport './Login.css'\nimport { API_BASE_URL } from '../../constants/apiConstants'\nimport { withRouter } from \"react-router-dom\"\n\nfunction Login(props) {\n    const [state, setState] = useState({\n        email: \"\",\n        password: \"\",\n        successMessage: null\n    })\n    const handleChange = (e) => {\n        const {id, value} = e.target\n        setState(prevState => ({\n            ...prevState,\n            [id] : value\n        }))\n    }\n\n    const handleSubmitClick = (e) => {\n        e.preventDefault();\n        const payload={\n            \"email\":state.email,\n            \"password\":state.password,\n        }\n        axios.post(API_BASE_URL+'login', payload)\n        .then(function (response) {\n            console.log(response)\n            if(response.data.code === 200){\n                setState(prevState => ({\n                    ...prevState,\n                    'successMessage' : 'Login successful! Redirecting to home page ...'\n                }))\n                redirectToHome();\n                props.showError(null)\n            }\n            else if(response.data.code === 204){\n                props.showError(\"Username and password do not match\");\n            } else{\n                // props.showError(\"Username does not exist\");\n            }\n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n    }\n    const redirectToHome = () => {\n        props.updateTitle('Home')\n        props.history.push('/home');\n    }\n    const redirectToRegister = () => {\n        props.history.push('/register');\n        props.updateTitle('Register');\n    }\n    return(\n        <div className=\"card col-12 col-lg-4 login-card mt-2 hv-center\">\n            <form>\n                <div className=\"form-group text-left\">\n                    <label htmlFor=\"exampleInputEmail1\">Email address</label>\n                    <input type=\"email\"\n                            className=\"form-control\"\n                            id=\"email\"\n                            aria-describedby=\"emailHelp\"\n                            placeholder=\"Enter email\"\n                            value={state.email}\n                            onChange={handleChange}\n                    />\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">We won't share your email with anyone.</small>\n                </div>\n                <div className=\"form-group text-left\">\n                    <label htmlFor=\"exampleInputPassword1\">Password</label>\n                    <input type=\"password\"\n                            className=\"form-control\"\n                            id=\"password\"\n                            placeholder=\"Password\"\n                            value={state.password}\n                            onChange={handleChange} \n                    />\n                </div>\n                <div className=\"form-check\">\n                </div>\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary\"\n                    onClick={handleSubmitClick}\n                >Submit</button>\n            </form>\n        <div className=\"alert alert-success mt-2\" style={{display: state.successMessage ? 'block' : 'none' }} role=\"alert\">\n                {state.successMessage}\n        </div>\n        <div className=\"registerMessage\">\n                <span>Don't have an account? </span>\n                <span className=\"loginText\" onClick={() => redirectToRegister()}>Register</span> \n        </div>\n    </div>\n\n    )\n}\n\nexport default withRouter(Login);","import React from \"react\";\n\nfunction MyGreenhouse(props) {\n  return (\n    <div>\n      <h1>My Greenhouse</h1>\n      <h3>My list of plants:</h3>\n    </div>\n  );\n}\n\nexport default MyGreenhouse;","import React, { useState, useEffect } from \"react\";\n\nfunction UserInput() {\n  const [user, setUser] = useState({});\n  const [users, setUsers] = useState([]);\n\n  const handleTextBoxChange = (e) => {\n    // [e.target.name]: e.target.value\n\n    setUser({\n      ...user,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleAddUser = () => {\n    setUsers(users.concat(user));\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Name\"\n        onChange={handleTextBoxChange}\n      />\n      <input\n        type=\"text\"\n        name=\"age\"\n        placeholder=\"Age\"\n        onChange={handleTextBoxChange}\n      />\n      <button onClick={handleAddUser}>Add User</button>\n    </div>\n  );\n}\n\nexport default UserInput;\n","const initialState = {\n  plants: []\n};\n\nconst reducer = (state = initialState, action) => {\n\n  if(action.type === \"PLANTS_FETCHED\") {\n    return {\n      ...state,\n      plants: action.payload\n    }\n  }\n\n  // switch (action.type) {\n  //   case \"INC\":\n  //     return {\n  //       ...state,\n  //       plants: state.counter + 1,\n  //     };\n  // }\n\n  //ALTERNATIVE IF/ELSE instead of SWITCH above. Switch is preferred:\n  //   if (action.type == \"INC\") {\n  //     return {\n  //       ...state,\n  //       counter: state.counter + 1,\n  //     };\n  //   } else if (action.type == \"ADD\") {\n  //     return {\n  //       ...state,\n  //       counter: state.counter + action.value,\n  //     };\n  //   }\n  return state;\n};\n\nexport default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport PlantMain from \"./PlantMain\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport BaseLayout from \"./components/BaseLayout\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Plants from \"./components/Plants\";\nimport AboutUs from \"./components/AboutUs\";\nimport Home from './components/Home'\nimport NewUser from './components/NewUser'\nimport PlantDetails from \"./components/PlantDetails\";\nimport Register from \"./components/RegistrationForm/Register\"\nimport Login from './components/LoginForm/Login'\nimport MyGreenhouse from './components/MyGreenhouse'\nimport AlertComponent from './components/AlertComponent/AlertComponent'\nimport DisplayUsers from \"./components/DisplayUsers\";\nimport UserInput from \"./components/UserInput\";\n// import CtrRedux from \"./components/CtrRedux\";\nimport { createStore } from \"redux\";\nimport reducer from \"./store/reducer\";\nimport { Provider } from \"react-redux\";\n\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <BaseLayout>\n          <Switch>\n            <Route component={PlantMain} path=\"/\" exact />\n            <Route component={PlantMain} path=\"/plantmain\" />\n            <Route component={PlantDetails} path=\"/plantdetails/:vegetableId\" />\n            <Route component={AboutUs} path=\"/aboutus\" />\n            <Route component={Register} path=\"/register\" />\n            <Route component={Login} path=\"/login\" />\n            <Route component={MyGreenhouse} path=\"/mygreenhouse\" />\n          </Switch>\n        </BaseLayout>\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}